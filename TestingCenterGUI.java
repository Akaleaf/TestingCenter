/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.akaleaf.course;

/**
 *
 * @author akaleaf
 */

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

public class TestingCenterGUI extends javax.swing.JFrame {
    
    public TestingCenter testingCenter = new TestingCenter();

    /**
     * Creates new form TestingCenterUI
     */
    public TestingCenterGUI() {
        initComponents();
        setLocationRelativeTo(null);
        ((AbstractDocument) testResultTextField.getDocument()).setDocumentFilter(new StringDocumentFilter());
        ((AbstractDocument) newTestResultTextField.getDocument()).setDocumentFilter(new StringDocumentFilter());
        ((AbstractDocument) userNameTextField.getDocument()).setDocumentFilter(new IntegerDocumentFilter());
        ((AbstractDocument) testNameTextField.getDocument()).setDocumentFilter(new IntegerDocumentFilter());
        ((AbstractDocument) newTestNameTextField.getDocument()).setDocumentFilter(new IntegerDocumentFilter());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        testsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        menuPanel = new javax.swing.JPanel();
        addUserButton = new javax.swing.JButton();
        removeUserButton = new javax.swing.JButton();
        userNameTextField = new javax.swing.JTextField();
        userNameLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        saveTablesToFileButton = new javax.swing.JButton();
        loadFromFileButton = new javax.swing.JButton();
        saveLogsToFileButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        logs = new javax.swing.JTextArea();
        testPanel = new javax.swing.JPanel();
        addTestPanel = new javax.swing.JPanel();
        addTestButton = new javax.swing.JButton();
        testResultLabel = new javax.swing.JLabel();
        testResultTextField = new javax.swing.JTextField();
        newTestNameLabel = new javax.swing.JLabel();
        testNameTextField = new javax.swing.JTextField();
        removeTestButton = new javax.swing.JButton();
        changeTestResultPanel = new javax.swing.JPanel();
        changeTestResultButton = new javax.swing.JButton();
        newResultLabel = new javax.swing.JLabel();
        newTestResultTextField = new javax.swing.JTextField();
        changeTestNamePanel = new javax.swing.JPanel();
        newNameLabel = new javax.swing.JLabel();
        newTestNameTextField = new javax.swing.JTextField();
        changeTestNameButton = new javax.swing.JButton();
        removeAllTestsCheckBox = new javax.swing.JCheckBox();
        selectedUserLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Table of users and tests"));

        testsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Test name", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        testsTable.getTableHeader().setReorderingAllowed(false);
        testsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(testsTable);
        if (testsTable.getColumnModel().getColumnCount() > 0) {
            testsTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Users", "Tests", "Average result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.getTableHeader().setReorderingAllowed(false);
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(usersTable);
        if (usersTable.getColumnModel().getColumnCount() > 0) {
            usersTable.getColumnModel().getColumn(1).setMinWidth(50);
            usersTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            usersTable.getColumnModel().getColumn(1).setMaxWidth(50);
            usersTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        menuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu"));

        addUserButton.setText("Add User");
        addUserButton.setName(""); // NOI18N
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        removeUserButton.setText("Remove User");
        removeUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserButtonActionPerformed(evt);
            }
        });

        userNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextFieldActionPerformed(evt);
            }
        });
        userNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userNameTextFieldKeyPressed(evt);
            }
        });

        userNameLabel.setText("User name:");

        saveTablesToFileButton.setText("Save tables to file");
        saveTablesToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTablesToFileButtonActionPerformed(evt);
            }
        });

        loadFromFileButton.setText("Load from file");
        loadFromFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFromFileButtonActionPerformed(evt);
            }
        });

        saveLogsToFileButton.setText("Save logs to file");
        saveLogsToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLogsToFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(userNameLabel)
                        .addGap(1, 1, 1)
                        .addComponent(userNameTextField))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(addUserButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addComponent(saveTablesToFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loadFromFileButton))
                    .addComponent(saveLogsToFileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addUserButton, loadFromFileButton, removeUserButton, saveTablesToFileButton});

        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveLogsToFileButton)
                            .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(userNameLabel)
                                .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeUserButton)
                            .addComponent(addUserButton)
                            .addComponent(saveTablesToFileButton)
                            .addComponent(loadFromFileButton))
                        .addContainerGap())))
        );

        logs.setEditable(false);
        logs.setColumns(20);
        jScrollPane3.setViewportView(logs);

        testPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Test"));

        addTestPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add test"));

        addTestButton.setText("Add test");
        addTestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTestButtonActionPerformed(evt);
            }
        });

        testResultLabel.setText("Test result:");

        javax.swing.GroupLayout addTestPanelLayout = new javax.swing.GroupLayout(addTestPanel);
        addTestPanel.setLayout(addTestPanelLayout);
        addTestPanelLayout.setHorizontalGroup(
            addTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testResultTextField)
                    .addGroup(addTestPanelLayout.createSequentialGroup()
                        .addComponent(testResultLabel)
                        .addGap(0, 60, Short.MAX_VALUE))
                    .addComponent(addTestButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        addTestPanelLayout.setVerticalGroup(
            addTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testResultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(testResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addTestButton)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        newTestNameLabel.setText("Test name:");

        testNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testNameTextFieldActionPerformed(evt);
            }
        });

        removeTestButton.setText("Remove test");
        removeTestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTestButtonActionPerformed(evt);
            }
        });

        changeTestResultPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Change test result"));

        changeTestResultButton.setText("Change test result");
        changeTestResultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTestResultButtonActionPerformed(evt);
            }
        });

        newResultLabel.setText("New result:");

        javax.swing.GroupLayout changeTestResultPanelLayout = new javax.swing.GroupLayout(changeTestResultPanel);
        changeTestResultPanel.setLayout(changeTestResultPanelLayout);
        changeTestResultPanelLayout.setHorizontalGroup(
            changeTestResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeTestResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(changeTestResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(changeTestResultButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(newTestResultTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, changeTestResultPanelLayout.createSequentialGroup()
                        .addComponent(newResultLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        changeTestResultPanelLayout.setVerticalGroup(
            changeTestResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeTestResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newResultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newTestResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changeTestResultButton)
                .addGap(17, 17, 17))
        );

        changeTestNamePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Change test name"));

        newNameLabel.setText("New name:");

        newTestNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTestNameTextFieldActionPerformed(evt);
            }
        });

        changeTestNameButton.setText("Change test name");
        changeTestNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTestNameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changeTestNamePanelLayout = new javax.swing.GroupLayout(changeTestNamePanel);
        changeTestNamePanel.setLayout(changeTestNamePanelLayout);
        changeTestNamePanelLayout.setHorizontalGroup(
            changeTestNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeTestNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(changeTestNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changeTestNamePanelLayout.createSequentialGroup()
                        .addComponent(newNameLabel)
                        .addGap(0, 94, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeTestNamePanelLayout.createSequentialGroup()
                        .addGroup(changeTestNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(changeTestNameButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(newTestNameTextField))
                        .addContainerGap())))
        );
        changeTestNamePanelLayout.setVerticalGroup(
            changeTestNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeTestNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newTestNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changeTestNameButton)
                .addGap(17, 17, 17))
        );

        removeAllTestsCheckBox.setText("Remove for all");

        selectedUserLabel.setText("<User is not selected>");

        javax.swing.GroupLayout testPanelLayout = new javax.swing.GroupLayout(testPanel);
        testPanel.setLayout(testPanelLayout);
        testPanelLayout.setHorizontalGroup(
            testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(testPanelLayout.createSequentialGroup()
                        .addGroup(testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(testPanelLayout.createSequentialGroup()
                                .addComponent(newTestNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(testNameTextField))
                            .addGroup(testPanelLayout.createSequentialGroup()
                                .addComponent(selectedUserLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeTestButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeAllTestsCheckBox)
                        .addContainerGap())
                    .addGroup(testPanelLayout.createSequentialGroup()
                        .addComponent(addTestPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeTestResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeTestNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        testPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {changeTestNamePanel, changeTestResultPanel});

        testPanelLayout.setVerticalGroup(
            testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testPanelLayout.createSequentialGroup()
                .addGroup(testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testPanelLayout.createSequentialGroup()
                        .addComponent(selectedUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newTestNameLabel)
                            .addGroup(testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(testNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(removeTestButton))))
                    .addComponent(removeAllTestsCheckBox, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testPanelLayout.createSequentialGroup()
                        .addGroup(testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addTestPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(changeTestResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(changeTestNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menuPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removeUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserButtonActionPerformed
          
        if (testingCenter.removeUser(userNameTextField.getText())) {
        
            logs.append("Remove User: User is removed: " + userNameTextField.getText() + "\n");
            updateUsersTable();
            updateTestsTable();
        
        };
        
    }//GEN-LAST:event_removeUserButtonActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        
        User newUser = new User(userNameTextField.getText(), 8);
        
        if (!userNameTextField.getText().equals("") && testingCenter.addUser(newUser, "")) {

            updateUsersTable();
            logs.append("Add User: User is added: " + userNameTextField.getText() + "\n");

        } else {

            logs.append("Add User: User is not added: " + userNameTextField.getText() + "\n");

        }

        selectedUserLabel.setText(userNameTextField.getText());
        
        updateTestsTable();
        
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void updateTestsTable() {
        
        if (selectedUserLabel.getText().equals("<User is not selected>"))
            return;
        
        User user = testingCenter.findMe(selectedUserLabel.getText());
        DefaultTableModel testsTableModel = (DefaultTableModel)testsTable.getModel();
        testsTableModel.setRowCount(0);
        
        for (int iter = 0; iter != user.getTestsTop() + 1; iter++) {
        
            testsTableModel.addRow(new Object[]{user.getTests()[iter].getName()});
            testsTableModel.setValueAt(user.getTests()[iter].getResult(), iter, 1);
        
        }
    
    }
    
    private void updateUsersTable() {
    
        User user;
        DefaultTableModel usersTableModel = (DefaultTableModel)usersTable.getModel();
        
        usersTableModel.setRowCount(0);
        
        for (int i = 0; i != testingCenter.getUsersCount(); i++) {
        
            user = testingCenter.findMe(i + 1);
            usersTableModel.addRow(new Object[]{user.getLastName()});
            usersTableModel.setValueAt(user.getTestsTop() + 1, i, 1);
            usersTableModel.setValueAt(user.getAverageResult(), i, 2);
            
            
        }
    
    }
    
    private void userNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTextFieldActionPerformed

    private void addTestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTestButtonActionPerformed
        
        int testResult = Integer.valueOf(testResultTextField.getText());
        
        if (testResult < 0 || testResult > 100) {

            logs.append("Add test: Test is not added: Out of range: " + testResult + "\n");
            return;

        }

        if (selectedUserLabel.getText().equals("<User is not selected>")) {

            logs.append("Add test: Test is not added: User is not selected\n");
            return;

        }
        
        String testName = testNameTextField.getText();
        User selectedUser = testingCenter.findMe(selectedUserLabel.getText());
        
        selectedUser.addTest(testName, testResult);
        updateTestsTable();
        updateUsersTable();
        logs.append("Add test: Test is added: " + testName + "\n");
        
    }//GEN-LAST:event_addTestButtonActionPerformed

    private void removeTestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTestButtonActionPerformed

        if (removeAllTestsCheckBox.isSelected()) {

            for(int i = 1; i != testingCenter.getUsersCount() + 1; i++) {

                if (testingCenter.findMe(i).removeTest(testNameTextField.getText()))
                    logs.append("Remove test: Test is removed: " + testNameTextField.getText() + "\n");
                else logs.append("Remove test: Test is not removed: " + testNameTextField.getText() + "\n");
                
            }

        } else {

            if (testingCenter.findMe(selectedUserLabel.getText()).removeTest(testNameTextField.getText()))
                logs.append("Remove test: Test is removed: " + testNameTextField.getText() + "\n");
            else logs.append("Remove test: Test is not removed: " + testNameTextField.getText() + "\n");

        }

        updateUsersTable();
        updateTestsTable();
        
    }//GEN-LAST:event_removeTestButtonActionPerformed

    private void saveTablesToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTablesToFileButtonActionPerformed
       
        JFileChooser fc = new JFileChooser();
        fc.showDialog(saveTablesToFileButton, "Save");
        String path = fc.getSelectedFile().toString();
        
        testingCenter.saveToFile(path);
        logs.append("Save tables to file: File is saved:\n");
        logs.append(path + "\n");
        
    }//GEN-LAST:event_saveTablesToFileButtonActionPerformed

    private void loadFromFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFromFileButtonActionPerformed

        JFileChooser fc = new JFileChooser();
        fc.addChoosableFileFilter(new CourseFilter());
        fc.setAcceptAllFileFilterUsed(false);
        fc.showDialog(loadFromFileButton, "Load");
        String path = fc.getSelectedFile().toString();
        
        testingCenter.loadFromFile(path, false);
//        DefaultTableModel testsTableModel = (DefaultTableModel)testsTable.getModel();
//        DefaultTableModel usersTableModel = (DefaultTableModel)usersTable.getModel();
        
        updateTestsTable();
        updateUsersTable();
        
        if (testingCenter.findMe(1) != null) {
        
            selectedUserLabel.setText(testingCenter.findMe(1).getLastName());
            updateTestsTable();
        
        }
        
        logs.append("Load from file: File is loaded:\n");
        logs.append(path + "\n");
        
    }//GEN-LAST:event_loadFromFileButtonActionPerformed

    private void changeTestResultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTestResultButtonActionPerformed
        // TODO add your handling code here:
        
        int testResult = Integer.valueOf(newTestResultTextField.getText());
        if (testResult < 0 || testResult > 100) {

            logs.append("Change test result: Test is not changed: Out of range: " + testResult + "\n");
            return;

        }
        
        if (selectedUserLabel.getText().equals("<User is not selected>")) {

            logs.append("Change test result: Test is not changed: User is not selected\n");
            return;

        }
        
        testingCenter.findMe(selectedUserLabel.getText()).setTestResult(testNameTextField.getText(), Integer.valueOf(newTestResultTextField.getText()));

        DefaultTableModel testsTableModel = (DefaultTableModel)testsTable.getModel();

        int i = 0;
        while (!testsTableModel.getValueAt(i, 0).equals(testNameTextField.getText()))
            i++;

        logs.append("Change test result: Test is changed: " + 
                testsTableModel.getValueAt(i, 1) + " -> " + testResult + "\n");

        updateTestsTable();
        updateUsersTable();
        
    }//GEN-LAST:event_changeTestResultButtonActionPerformed

    private void changeTestNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTestNameButtonActionPerformed
        
        logs.append("Change test name: Test is changed: " + testNameTextField.getText() + " -> " + newTestNameTextField.getText() + "\n");
        testingCenter.findMe(selectedUserLabel.getText()).setTestName(testNameTextField.getText(), newTestNameTextField.getText());
        updateTestsTable();
        
    }//GEN-LAST:event_changeTestNameButtonActionPerformed

    private void testNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testNameTextFieldActionPerformed

    private void newTestNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTestNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newTestNameTextFieldActionPerformed

    private void userNameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameTextFieldKeyPressed
        
    }//GEN-LAST:event_userNameTextFieldKeyPressed

    /**
     * 
     * Выбор пользователя через таблицу пользователей левой кнопкой мыши
     * 
     * @param evt 
     */
    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        // TODO add your handling code here:
        
        selectedUserLabel.setText((String)usersTable.getValueAt(usersTable.getSelectedRow(), 0));
        userNameTextField.setText((String)usersTable.getValueAt(usersTable.getSelectedRow(), 0));
        
        updateTestsTable();
        
    }//GEN-LAST:event_usersTableMouseClicked

    private void saveLogsToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLogsToFileButtonActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fc = new JFileChooser();
        fc.showDialog(saveTablesToFileButton, "Save");
        String path = fc.getSelectedFile().toString();
        
        logs.append("Save logs to file: File is saved:\n");
        logs.append(path + "\n");
        
        try {

            FileWriter file = new FileWriter(path);
            
            file.append(logs.getText());
            
            file.flush();
            file.close();
            
            } catch (IOException e) {

            e.printStackTrace();

        }
        
    }//GEN-LAST:event_saveLogsToFileButtonActionPerformed

    private void testsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testsTableMouseClicked
        // TODO add your handling code here:
        
        testNameTextField.setText((String)testsTable.getValueAt(testsTable.getSelectedRow(), 0));
        
        updateTestsTable();
        
    }//GEN-LAST:event_testsTableMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
                
                if ("Windows classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
                
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestingCenterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestingCenterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestingCenterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestingCenterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                
                new TestingCenterGUI().setVisible(true);
                
            }
            
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTestButton;
    private javax.swing.JPanel addTestPanel;
    private javax.swing.JButton addUserButton;
    private javax.swing.JButton changeTestNameButton;
    private javax.swing.JPanel changeTestNamePanel;
    private javax.swing.JButton changeTestResultButton;
    private javax.swing.JPanel changeTestResultPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton loadFromFileButton;
    private javax.swing.JTextArea logs;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel newNameLabel;
    private javax.swing.JLabel newResultLabel;
    private javax.swing.JLabel newTestNameLabel;
    private javax.swing.JTextField newTestNameTextField;
    private javax.swing.JTextField newTestResultTextField;
    private javax.swing.JCheckBox removeAllTestsCheckBox;
    private javax.swing.JButton removeTestButton;
    private javax.swing.JButton removeUserButton;
    private javax.swing.JButton saveLogsToFileButton;
    private javax.swing.JButton saveTablesToFileButton;
    private javax.swing.JLabel selectedUserLabel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JTextField testNameTextField;
    private javax.swing.JPanel testPanel;
    private javax.swing.JLabel testResultLabel;
    private javax.swing.JTextField testResultTextField;
    private javax.swing.JTable testsTable;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}

class StringDocumentFilter extends DocumentFilter {

    @Override
    public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
        string = string.replaceAll("[qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM]", "");
        super.insertString(fb, offset, string, attr);
    }
    
    @Override
    public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
        text = text.replaceAll("[qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM]", "");
        super.replace(fb, offset, length, text, attrs);
    }   

}

class IntegerDocumentFilter extends DocumentFilter {

    @Override
    public void insertString(DocumentFilter.FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
        string = string.replaceAll("[1234567890]", "");
        super.insertString(fb, offset, string, attr);
    }
    
    @Override
    public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
        text = text.replaceAll("[1234567890]", "");
        super.replace(fb, offset, length, text, attrs);
    }   

}

class CourseFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".course");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Course documents (*.course)";
        }
    } 
